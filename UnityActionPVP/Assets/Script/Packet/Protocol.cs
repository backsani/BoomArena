// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from Protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Qcm90b2NvbC5wcm90bxIIUHJvdG9jb2waCkVudW0ucHJvdG8aDFN0cnVj",
            "dC5wcm90byIcCgdDX0xPR0lOEhEKCWxvZ2luQ29kZRgBIAEoBCJ8CgZDX01P",
            "VkUSEAoIcm9vbUNvZGUYASABKAUSEAoIb2JqZWN0SWQYAiABKA0SKAoFc3Rh",
            "dGUYAyABKA4yGS5Qcm90b2NvbC5HYW1lT2JqZWN0U3RhdGUSJAoJZGlyZWN0",
            "aW9uGAQgASgLMhEuUHJvdG9jb2wuVmVjdG9yMyIcCgtDX1JPT01fREFUQRIN",
            "CgVkdW1teRgBIAEoDSIiCg5DX1JPT01fUkVRVUVTVBIQCghyb29tQ29kZRgB",
            "IAEoBSJ+CghDX0FUVEFDSxIQCghyb29tQ29kZRgBIAEoBRIQCghvYmplY3RJ",
            "ZBgCIAEoDRIoCgpvYmplY3RUeXBlGAMgASgOMhQuUHJvdG9jb2wuT2JqZWN0",
            "VHlwZRIkCglkaXJlY3Rpb24YBCABKAsyES5Qcm90b2NvbC5WZWN0b3IzIiEK",
            "CkNfUlRUX1BJTkcSEwoLY2xpZW50X3RpbWUYASABKAMiNgoKU19SVFRfUE9O",
            "RxITCgtjbGllbnRfdGltZRgBIAEoAxITCgtzZXJ2ZXJfdGltZRgCIAEoAyIu",
            "CgdTX0xPR0lOEg4KBmdhbWVJZBgBIAEoBBITCgtsb2dpbkFjY2VwdBgCIAEo",
            "CCIzCgtTX1JPT01fREFUQRIkCghyb29tRGF0YRgBIAMoCzISLlByb3RvY29s",
            "LlJvb21EYXRhInkKD1NfUk9PTV9SRVNQT05TRRISCgpyb29tQWNjZXB0GAEg",
            "ASgIEhAKCHJvb21Db2RlGAIgASgFEhYKDnBsYXllck9iamVjdElkGAMgASgN",
            "EigKCm9iamVjdERhdGEYBCADKAsyFC5Qcm90b2NvbC5PYmplY3REYXRhImkK",
            "BlNfTU9WRRIQCghvYmplY3RJZBgBIAEoDRIoCgVzdGF0ZRgCIAEoDjIZLlBy",
            "b3RvY29sLkdhbWVPYmplY3RTdGF0ZRIjCghwb3NpdGlvbhgDIAEoCzIRLlBy",
            "b3RvY29sLlZlY3RvcjMiTQoOU19PQkpFQ1RfU1BBV04SKAoKb2JqZWN0RGF0",
            "YRgBIAEoCzIULlByb3RvY29sLk9iamVjdERhdGESEQoJc3Bhd25UaW1lGAIg",
            "ASgDIksKDVNfT0JKRUNUX0RFQUQSEAoIb2JqZWN0SWQYASABKA0SKAoFc3Rh",
            "dGUYAiABKA4yGS5Qcm90b2NvbC5HYW1lT2JqZWN0U3RhdGUiLwoPU19PQkpF",
            "Q1RfREFNQUdFEhAKCG9iamVjdElkGAEgASgNEgoKAmhwGAIgASgCYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protocol.EnumReflection.Descriptor, global::Protocol.StructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C_LOGIN), global::Protocol.C_LOGIN.Parser, new[]{ "LoginCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C_MOVE), global::Protocol.C_MOVE.Parser, new[]{ "RoomCode", "ObjectId", "State", "Direction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C_ROOM_DATA), global::Protocol.C_ROOM_DATA.Parser, new[]{ "Dummy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C_ROOM_REQUEST), global::Protocol.C_ROOM_REQUEST.Parser, new[]{ "RoomCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C_ATTACK), global::Protocol.C_ATTACK.Parser, new[]{ "RoomCode", "ObjectId", "ObjectType", "Direction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C_RTT_PING), global::Protocol.C_RTT_PING.Parser, new[]{ "ClientTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S_RTT_PONG), global::Protocol.S_RTT_PONG.Parser, new[]{ "ClientTime", "ServerTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S_LOGIN), global::Protocol.S_LOGIN.Parser, new[]{ "GameId", "LoginAccept" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S_ROOM_DATA), global::Protocol.S_ROOM_DATA.Parser, new[]{ "RoomData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S_ROOM_RESPONSE), global::Protocol.S_ROOM_RESPONSE.Parser, new[]{ "RoomAccept", "RoomCode", "PlayerObjectId", "ObjectData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S_MOVE), global::Protocol.S_MOVE.Parser, new[]{ "ObjectId", "State", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S_OBJECT_SPAWN), global::Protocol.S_OBJECT_SPAWN.Parser, new[]{ "ObjectData", "SpawnTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S_OBJECT_DEAD), global::Protocol.S_OBJECT_DEAD.Parser, new[]{ "ObjectId", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S_OBJECT_DAMAGE), global::Protocol.S_OBJECT_DAMAGE.Parser, new[]{ "ObjectId", "Hp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class C_LOGIN : pb::IMessage<C_LOGIN>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_LOGIN> _parser = new pb::MessageParser<C_LOGIN>(() => new C_LOGIN());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_LOGIN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LOGIN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LOGIN(C_LOGIN other) : this() {
      loginCode_ = other.loginCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_LOGIN Clone() {
      return new C_LOGIN(this);
    }

    /// <summary>Field number for the "loginCode" field.</summary>
    public const int LoginCodeFieldNumber = 1;
    private ulong loginCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LoginCode {
      get { return loginCode_; }
      set {
        loginCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_LOGIN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_LOGIN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginCode != other.LoginCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginCode != 0UL) hash ^= LoginCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LoginCode != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(LoginCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LoginCode != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(LoginCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginCode != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LoginCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_LOGIN other) {
      if (other == null) {
        return;
      }
      if (other.LoginCode != 0UL) {
        LoginCode = other.LoginCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LoginCode = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LoginCode = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class C_MOVE : pb::IMessage<C_MOVE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_MOVE> _parser = new pb::MessageParser<C_MOVE>(() => new C_MOVE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_MOVE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_MOVE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_MOVE(C_MOVE other) : this() {
      roomCode_ = other.roomCode_;
      objectId_ = other.objectId_;
      state_ = other.state_;
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_MOVE Clone() {
      return new C_MOVE(this);
    }

    /// <summary>Field number for the "roomCode" field.</summary>
    public const int RoomCodeFieldNumber = 1;
    private int roomCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomCode {
      get { return roomCode_; }
      set {
        roomCode_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Protocol.GameObjectState state_ = global::Protocol.GameObjectState.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.GameObjectState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private global::Protocol.Vector3 direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Vector3 Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_MOVE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_MOVE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomCode != other.RoomCode) return false;
      if (ObjectId != other.ObjectId) return false;
      if (State != other.State) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomCode != 0) hash ^= RoomCode.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (State != global::Protocol.GameObjectState.Idle) hash ^= State.GetHashCode();
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomCode);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (direction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomCode);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (direction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomCode);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_MOVE other) {
      if (other == null) {
        return;
      }
      if (other.RoomCode != 0) {
        RoomCode = other.RoomCode;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.State != global::Protocol.GameObjectState.Idle) {
        State = other.State;
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::Protocol.Vector3();
        }
        Direction.MergeFrom(other.Direction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomCode = input.ReadInt32();
            break;
          }
          case 16: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 24: {
            State = (global::Protocol.GameObjectState) input.ReadEnum();
            break;
          }
          case 34: {
            if (direction_ == null) {
              Direction = new global::Protocol.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomCode = input.ReadInt32();
            break;
          }
          case 16: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 24: {
            State = (global::Protocol.GameObjectState) input.ReadEnum();
            break;
          }
          case 34: {
            if (direction_ == null) {
              Direction = new global::Protocol.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Room Data Request
  /// </summary>
  public sealed partial class C_ROOM_DATA : pb::IMessage<C_ROOM_DATA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_ROOM_DATA> _parser = new pb::MessageParser<C_ROOM_DATA>(() => new C_ROOM_DATA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ROOM_DATA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ROOM_DATA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ROOM_DATA(C_ROOM_DATA other) : this() {
      dummy_ = other.dummy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ROOM_DATA Clone() {
      return new C_ROOM_DATA(this);
    }

    /// <summary>Field number for the "dummy" field.</summary>
    public const int DummyFieldNumber = 1;
    private uint dummy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Dummy {
      get { return dummy_; }
      set {
        dummy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ROOM_DATA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ROOM_DATA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dummy != other.Dummy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dummy != 0) hash ^= Dummy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Dummy != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Dummy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Dummy != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Dummy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dummy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dummy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ROOM_DATA other) {
      if (other == null) {
        return;
      }
      if (other.Dummy != 0) {
        Dummy = other.Dummy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Dummy = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Dummy = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Room Access Request
  /// </summary>
  public sealed partial class C_ROOM_REQUEST : pb::IMessage<C_ROOM_REQUEST>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_ROOM_REQUEST> _parser = new pb::MessageParser<C_ROOM_REQUEST>(() => new C_ROOM_REQUEST());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ROOM_REQUEST> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ROOM_REQUEST() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ROOM_REQUEST(C_ROOM_REQUEST other) : this() {
      roomCode_ = other.roomCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ROOM_REQUEST Clone() {
      return new C_ROOM_REQUEST(this);
    }

    /// <summary>Field number for the "roomCode" field.</summary>
    public const int RoomCodeFieldNumber = 1;
    private int roomCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomCode {
      get { return roomCode_; }
      set {
        roomCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ROOM_REQUEST);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ROOM_REQUEST other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomCode != other.RoomCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomCode != 0) hash ^= RoomCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ROOM_REQUEST other) {
      if (other == null) {
        return;
      }
      if (other.RoomCode != 0) {
        RoomCode = other.RoomCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomCode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomCode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class C_ATTACK : pb::IMessage<C_ATTACK>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_ATTACK> _parser = new pb::MessageParser<C_ATTACK>(() => new C_ATTACK());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_ATTACK> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ATTACK() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ATTACK(C_ATTACK other) : this() {
      roomCode_ = other.roomCode_;
      objectId_ = other.objectId_;
      objectType_ = other.objectType_;
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_ATTACK Clone() {
      return new C_ATTACK(this);
    }

    /// <summary>Field number for the "roomCode" field.</summary>
    public const int RoomCodeFieldNumber = 1;
    private int roomCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomCode {
      get { return roomCode_; }
      set {
        roomCode_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "objectType" field.</summary>
    public const int ObjectTypeFieldNumber = 3;
    private global::Protocol.ObjectType objectType_ = global::Protocol.ObjectType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ObjectType ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private global::Protocol.Vector3 direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Vector3 Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_ATTACK);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_ATTACK other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomCode != other.RoomCode) return false;
      if (ObjectId != other.ObjectId) return false;
      if (ObjectType != other.ObjectType) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomCode != 0) hash ^= RoomCode.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (ObjectType != global::Protocol.ObjectType.None) hash ^= ObjectType.GetHashCode();
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomCode);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectId);
      }
      if (ObjectType != global::Protocol.ObjectType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ObjectType);
      }
      if (direction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomCode);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectId);
      }
      if (ObjectType != global::Protocol.ObjectType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ObjectType);
      }
      if (direction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomCode);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (ObjectType != global::Protocol.ObjectType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ObjectType);
      }
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_ATTACK other) {
      if (other == null) {
        return;
      }
      if (other.RoomCode != 0) {
        RoomCode = other.RoomCode;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.ObjectType != global::Protocol.ObjectType.None) {
        ObjectType = other.ObjectType;
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::Protocol.Vector3();
        }
        Direction.MergeFrom(other.Direction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomCode = input.ReadInt32();
            break;
          }
          case 16: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 24: {
            ObjectType = (global::Protocol.ObjectType) input.ReadEnum();
            break;
          }
          case 34: {
            if (direction_ == null) {
              Direction = new global::Protocol.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomCode = input.ReadInt32();
            break;
          }
          case 16: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 24: {
            ObjectType = (global::Protocol.ObjectType) input.ReadEnum();
            break;
          }
          case 34: {
            if (direction_ == null) {
              Direction = new global::Protocol.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class C_RTT_PING : pb::IMessage<C_RTT_PING>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_RTT_PING> _parser = new pb::MessageParser<C_RTT_PING>(() => new C_RTT_PING());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_RTT_PING> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RTT_PING() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RTT_PING(C_RTT_PING other) : this() {
      clientTime_ = other.clientTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_RTT_PING Clone() {
      return new C_RTT_PING(this);
    }

    /// <summary>Field number for the "client_time" field.</summary>
    public const int ClientTimeFieldNumber = 1;
    private long clientTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientTime {
      get { return clientTime_; }
      set {
        clientTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_RTT_PING);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_RTT_PING other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientTime != other.ClientTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientTime != 0L) hash ^= ClientTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_RTT_PING other) {
      if (other == null) {
        return;
      }
      if (other.ClientTime != 0L) {
        ClientTime = other.ClientTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class S_RTT_PONG : pb::IMessage<S_RTT_PONG>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_RTT_PONG> _parser = new pb::MessageParser<S_RTT_PONG>(() => new S_RTT_PONG());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_RTT_PONG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RTT_PONG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RTT_PONG(S_RTT_PONG other) : this() {
      clientTime_ = other.clientTime_;
      serverTime_ = other.serverTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_RTT_PONG Clone() {
      return new S_RTT_PONG(this);
    }

    /// <summary>Field number for the "client_time" field.</summary>
    public const int ClientTimeFieldNumber = 1;
    private long clientTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientTime {
      get { return clientTime_; }
      set {
        clientTime_ = value;
      }
    }

    /// <summary>Field number for the "server_time" field.</summary>
    public const int ServerTimeFieldNumber = 2;
    private long serverTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ServerTime {
      get { return serverTime_; }
      set {
        serverTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_RTT_PONG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_RTT_PONG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientTime != other.ClientTime) return false;
      if (ServerTime != other.ServerTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientTime != 0L) hash ^= ClientTime.GetHashCode();
      if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientTime);
      }
      if (ServerTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ServerTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientTime);
      }
      if (ServerTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ServerTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTime);
      }
      if (ServerTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_RTT_PONG other) {
      if (other == null) {
        return;
      }
      if (other.ClientTime != 0L) {
        ClientTime = other.ClientTime;
      }
      if (other.ServerTime != 0L) {
        ServerTime = other.ServerTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientTime = input.ReadInt64();
            break;
          }
          case 16: {
            ServerTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientTime = input.ReadInt64();
            break;
          }
          case 16: {
            ServerTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class S_LOGIN : pb::IMessage<S_LOGIN>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_LOGIN> _parser = new pb::MessageParser<S_LOGIN>(() => new S_LOGIN());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_LOGIN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LOGIN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LOGIN(S_LOGIN other) : this() {
      gameId_ = other.gameId_;
      loginAccept_ = other.loginAccept_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LOGIN Clone() {
      return new S_LOGIN(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private ulong gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "loginAccept" field.</summary>
    public const int LoginAcceptFieldNumber = 2;
    private bool loginAccept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LoginAccept {
      get { return loginAccept_; }
      set {
        loginAccept_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_LOGIN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_LOGIN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (LoginAccept != other.LoginAccept) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId != 0UL) hash ^= GameId.GetHashCode();
      if (LoginAccept != false) hash ^= LoginAccept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (LoginAccept != false) {
        output.WriteRawTag(16);
        output.WriteBool(LoginAccept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GameId);
      }
      if (LoginAccept != false) {
        output.WriteRawTag(16);
        output.WriteBool(LoginAccept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameId);
      }
      if (LoginAccept != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_LOGIN other) {
      if (other == null) {
        return;
      }
      if (other.GameId != 0UL) {
        GameId = other.GameId;
      }
      if (other.LoginAccept != false) {
        LoginAccept = other.LoginAccept;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            LoginAccept = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameId = input.ReadUInt64();
            break;
          }
          case 16: {
            LoginAccept = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Room Data Response
  /// </summary>
  public sealed partial class S_ROOM_DATA : pb::IMessage<S_ROOM_DATA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_ROOM_DATA> _parser = new pb::MessageParser<S_ROOM_DATA>(() => new S_ROOM_DATA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ROOM_DATA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ROOM_DATA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ROOM_DATA(S_ROOM_DATA other) : this() {
      roomData_ = other.roomData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ROOM_DATA Clone() {
      return new S_ROOM_DATA(this);
    }

    /// <summary>Field number for the "roomData" field.</summary>
    public const int RoomDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.RoomData> _repeated_roomData_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.RoomData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.RoomData> roomData_ = new pbc::RepeatedField<global::Protocol.RoomData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.RoomData> RoomData {
      get { return roomData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ROOM_DATA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ROOM_DATA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roomData_.Equals(other.roomData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roomData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roomData_.WriteTo(output, _repeated_roomData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roomData_.WriteTo(ref output, _repeated_roomData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roomData_.CalculateSize(_repeated_roomData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ROOM_DATA other) {
      if (other == null) {
        return;
      }
      roomData_.Add(other.roomData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roomData_.AddEntriesFrom(input, _repeated_roomData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roomData_.AddEntriesFrom(ref input, _repeated_roomData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Room Accept &amp; Ingame Objects Data
  /// </summary>
  public sealed partial class S_ROOM_RESPONSE : pb::IMessage<S_ROOM_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_ROOM_RESPONSE> _parser = new pb::MessageParser<S_ROOM_RESPONSE>(() => new S_ROOM_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_ROOM_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ROOM_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ROOM_RESPONSE(S_ROOM_RESPONSE other) : this() {
      roomAccept_ = other.roomAccept_;
      roomCode_ = other.roomCode_;
      playerObjectId_ = other.playerObjectId_;
      objectData_ = other.objectData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_ROOM_RESPONSE Clone() {
      return new S_ROOM_RESPONSE(this);
    }

    /// <summary>Field number for the "roomAccept" field.</summary>
    public const int RoomAcceptFieldNumber = 1;
    private bool roomAccept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RoomAccept {
      get { return roomAccept_; }
      set {
        roomAccept_ = value;
      }
    }

    /// <summary>Field number for the "roomCode" field.</summary>
    public const int RoomCodeFieldNumber = 2;
    private int roomCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomCode {
      get { return roomCode_; }
      set {
        roomCode_ = value;
      }
    }

    /// <summary>Field number for the "playerObjectId" field.</summary>
    public const int PlayerObjectIdFieldNumber = 3;
    private uint playerObjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerObjectId {
      get { return playerObjectId_; }
      set {
        playerObjectId_ = value;
      }
    }

    /// <summary>Field number for the "objectData" field.</summary>
    public const int ObjectDataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Protocol.ObjectData> _repeated_objectData_codec
        = pb::FieldCodec.ForMessage(34, global::Protocol.ObjectData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.ObjectData> objectData_ = new pbc::RepeatedField<global::Protocol.ObjectData>();
    /// <summary>
    /// Ingame Objects Data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.ObjectData> ObjectData {
      get { return objectData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_ROOM_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_ROOM_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomAccept != other.RoomAccept) return false;
      if (RoomCode != other.RoomCode) return false;
      if (PlayerObjectId != other.PlayerObjectId) return false;
      if(!objectData_.Equals(other.objectData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomAccept != false) hash ^= RoomAccept.GetHashCode();
      if (RoomCode != 0) hash ^= RoomCode.GetHashCode();
      if (PlayerObjectId != 0) hash ^= PlayerObjectId.GetHashCode();
      hash ^= objectData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomAccept != false) {
        output.WriteRawTag(8);
        output.WriteBool(RoomAccept);
      }
      if (RoomCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomCode);
      }
      if (PlayerObjectId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PlayerObjectId);
      }
      objectData_.WriteTo(output, _repeated_objectData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomAccept != false) {
        output.WriteRawTag(8);
        output.WriteBool(RoomAccept);
      }
      if (RoomCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomCode);
      }
      if (PlayerObjectId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PlayerObjectId);
      }
      objectData_.WriteTo(ref output, _repeated_objectData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomAccept != false) {
        size += 1 + 1;
      }
      if (RoomCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomCode);
      }
      if (PlayerObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerObjectId);
      }
      size += objectData_.CalculateSize(_repeated_objectData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_ROOM_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.RoomAccept != false) {
        RoomAccept = other.RoomAccept;
      }
      if (other.RoomCode != 0) {
        RoomCode = other.RoomCode;
      }
      if (other.PlayerObjectId != 0) {
        PlayerObjectId = other.PlayerObjectId;
      }
      objectData_.Add(other.objectData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomAccept = input.ReadBool();
            break;
          }
          case 16: {
            RoomCode = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerObjectId = input.ReadUInt32();
            break;
          }
          case 34: {
            objectData_.AddEntriesFrom(input, _repeated_objectData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomAccept = input.ReadBool();
            break;
          }
          case 16: {
            RoomCode = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerObjectId = input.ReadUInt32();
            break;
          }
          case 34: {
            objectData_.AddEntriesFrom(ref input, _repeated_objectData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class S_MOVE : pb::IMessage<S_MOVE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_MOVE> _parser = new pb::MessageParser<S_MOVE>(() => new S_MOVE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_MOVE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_MOVE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_MOVE(S_MOVE other) : this() {
      objectId_ = other.objectId_;
      state_ = other.state_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_MOVE Clone() {
      return new S_MOVE(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Protocol.GameObjectState state_ = global::Protocol.GameObjectState.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.GameObjectState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Protocol.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_MOVE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_MOVE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (State != other.State) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (State != global::Protocol.GameObjectState.Idle) hash ^= State.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_MOVE other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.State != global::Protocol.GameObjectState.Idle) {
        State = other.State;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Protocol.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            State = (global::Protocol.GameObjectState) input.ReadEnum();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Protocol.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            State = (global::Protocol.GameObjectState) input.ReadEnum();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Protocol.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class S_OBJECT_SPAWN : pb::IMessage<S_OBJECT_SPAWN>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_OBJECT_SPAWN> _parser = new pb::MessageParser<S_OBJECT_SPAWN>(() => new S_OBJECT_SPAWN());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_OBJECT_SPAWN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_SPAWN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_SPAWN(S_OBJECT_SPAWN other) : this() {
      objectData_ = other.objectData_ != null ? other.objectData_.Clone() : null;
      spawnTime_ = other.spawnTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_SPAWN Clone() {
      return new S_OBJECT_SPAWN(this);
    }

    /// <summary>Field number for the "objectData" field.</summary>
    public const int ObjectDataFieldNumber = 1;
    private global::Protocol.ObjectData objectData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ObjectData ObjectData {
      get { return objectData_; }
      set {
        objectData_ = value;
      }
    }

    /// <summary>Field number for the "spawnTime" field.</summary>
    public const int SpawnTimeFieldNumber = 2;
    private long spawnTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SpawnTime {
      get { return spawnTime_; }
      set {
        spawnTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_OBJECT_SPAWN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_OBJECT_SPAWN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObjectData, other.ObjectData)) return false;
      if (SpawnTime != other.SpawnTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (objectData_ != null) hash ^= ObjectData.GetHashCode();
      if (SpawnTime != 0L) hash ^= SpawnTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (objectData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectData);
      }
      if (SpawnTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SpawnTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (objectData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectData);
      }
      if (SpawnTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SpawnTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (objectData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectData);
      }
      if (SpawnTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SpawnTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_OBJECT_SPAWN other) {
      if (other == null) {
        return;
      }
      if (other.objectData_ != null) {
        if (objectData_ == null) {
          ObjectData = new global::Protocol.ObjectData();
        }
        ObjectData.MergeFrom(other.ObjectData);
      }
      if (other.SpawnTime != 0L) {
        SpawnTime = other.SpawnTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (objectData_ == null) {
              ObjectData = new global::Protocol.ObjectData();
            }
            input.ReadMessage(ObjectData);
            break;
          }
          case 16: {
            SpawnTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (objectData_ == null) {
              ObjectData = new global::Protocol.ObjectData();
            }
            input.ReadMessage(ObjectData);
            break;
          }
          case 16: {
            SpawnTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class S_OBJECT_DEAD : pb::IMessage<S_OBJECT_DEAD>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_OBJECT_DEAD> _parser = new pb::MessageParser<S_OBJECT_DEAD>(() => new S_OBJECT_DEAD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_OBJECT_DEAD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_DEAD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_DEAD(S_OBJECT_DEAD other) : this() {
      objectId_ = other.objectId_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_DEAD Clone() {
      return new S_OBJECT_DEAD(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Protocol.GameObjectState state_ = global::Protocol.GameObjectState.Idle;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.GameObjectState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_OBJECT_DEAD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_OBJECT_DEAD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (State != global::Protocol.GameObjectState.Idle) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (State != global::Protocol.GameObjectState.Idle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_OBJECT_DEAD other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.State != global::Protocol.GameObjectState.Idle) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            State = (global::Protocol.GameObjectState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            State = (global::Protocol.GameObjectState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class S_OBJECT_DAMAGE : pb::IMessage<S_OBJECT_DAMAGE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_OBJECT_DAMAGE> _parser = new pb::MessageParser<S_OBJECT_DAMAGE>(() => new S_OBJECT_DAMAGE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_OBJECT_DAMAGE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_DAMAGE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_DAMAGE(S_OBJECT_DAMAGE other) : this() {
      objectId_ = other.objectId_;
      hp_ = other.hp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_OBJECT_DAMAGE Clone() {
      return new S_OBJECT_DAMAGE(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 2;
    private float hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_OBJECT_DAMAGE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_OBJECT_DAMAGE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Hp, other.Hp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (Hp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Hp);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (Hp != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Hp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (Hp != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Hp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (Hp != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_OBJECT_DAMAGE other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.Hp != 0F) {
        Hp = other.Hp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 21: {
            Hp = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 21: {
            Hp = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
